#!/usr/bin/env python
import os

subjs = ['WMAZE_001', 'WMAZE_002', 'WMAZE_004', 'WMAZE_005', 'WMAZE_006', 'WMAZE_007', 'WMAZE_008', 'WMAZE_009', 'WMAZE_010', 'WMAZE_012', 
         'WMAZE_017', 'WMAZE_018', 'WMAZE_019', 'WMAZE_020', 'WMAZE_021', 'WMAZE_022', 'WMAZE_023', 'WMAZE_024', 'WMAZE_026', 'WMAZE_027']

workdir = '/scratch/madlab/crash/model_LSS1/status/merge_copes'
outdir = '/home/data/madlab/data/mri/wmaze/merge_copes/model_LSS1'

for sid in subjs:
    #flexible command to execute script, providing kwarg flags with respective information using python
    convertcmd = ' '.join(['python', '/home/data/madlab/scripts/wmaze/model_LSS1/LSS1_merge_copes.py', '-s', sid, '-o', outdir, '-w', workdir]) 
 
    script_file = 'LSS1_merge_copes.py-{0}.sh'.format(sub) #shell file for each subject

    with open(script_file, 'wt') as fp: #create/open shell script file
        fp.writelines(['#!/bin/bash\n', convertcmd]) #write line to identify as bash

    #submission statement of shell file to scheduler
    outcmd = 'bsub -J atm-LSS1_merge_copes.py-{0} -q PQ_madlab -e /scratch/madlab/crash/wmaze_MRthesis/model3_2-3-2-5/merge_copes/err_{0} -o /scratch/madlab/crash/wmaze_MRthesis/model3_2-3-2-5/merge_copes/out_{0} < {1}'.format(sid, script_file)

    os.system(outcmd) #submission command
    continue
